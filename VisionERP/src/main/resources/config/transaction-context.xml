<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/tx 
				 		http://www.springframework.org/schema/tx/spring-tx.xsd
				 		http://www.springframework.org/schema/aop 
					    http://www.springframework.org/schema/aop/spring-aop.xsd">


<!-- DataSource 영역 -->
	<!-- PropertyPlaceholderConfigurer 로 로드된 resource 는 ${  } 로 접근 가능 -->
	<bean	id="propertyConfigurer"
				class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config/jdbc.properties" />
	</bean>

<bean
id="dataSource"
class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
</bean>


<!-- SqlSession 영역 -->
	<bean 	id="sqlSessionFactory" 
					class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:sql/sqlConfig.xml"/>
	</bean>

	<!--  ㅇ SqlSessionTeampate 인스턴스생성
		   ㅇ Spring 과 연동시 사용하는 핵심 SqlSession 구현체
		   ㅇ Spring 에서 제공한는 Transaction 처리에 구조화된 SqlSession 구현체	 -->
	<bean		id="sqlSession"		
					class="org.mybatis.spring.SqlSessionTemplate" >		
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>




<!-- Transaction 영역 -->
	<!-- TransactioManager instance 생성 -->
	<bean id="transactionManager" 
				class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
		<property name="dataSource" ref="dataSource"/>
	</bean>	
	
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- get 으로 시작된는 Method에 적용 transaction 규칙 -->				
			<tx:method 	name="get*" 			propagation="REQUIRED"	read-only="true" />
			<tx:method 	name="check*" 			propagation="REQUIRED"	read-only="true" />
			<tx:method 	name="calculate*" 		propagation="REQUIRED"	read-only="true" />
			<!-- add 으로 시작된는 Method에 적용 transaction 규칙 -->		
			<tx:method	name="add*"	 			propagation="REQUIRED"/>
			<tx:method	name="modify*"			propagation="REQUIRED"/>
			<tx:method	name="convert*"			propagation="REQUIRED"/>

			<!--모든 Method에 적용 transaction 규칙 -->		
			<!-- <tx:method	name="*"	 />-->	
		</tx:attributes>
	</tx:advice>
	
		<!-- AOP : pointcut / advisor 설정 -->
	<!--<aop:config>
	 <aop:pointcut 	id="requiredTx"
									expression="execution(* com.vision.erp.service..*ServiceImpl.*(..) )" />
	
		<aop:advisor 	advice-ref="txAdvice"  pointcut-ref="requiredTx"  />
	</aop:config> -->
</beans>
